<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Trevor de Koekkoek</title>
  <subtitle>My blog about angularjs, ionic, web development, etc.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tdekoekkoek.github.io/"/>
  <updated>2016-12-09T22:29:38.433Z</updated>
  <id>http://tdekoekkoek.github.io/</id>
  
  <author>
    <name>Trevor de Koekkoek</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Building an application with Angular2, Dotnet Core, Web API and Entity Framework</title>
    <link href="http://tdekoekkoek.github.io/2016/12/08/Building-an-application-with-Angular2-Webpack-Dotnet-Core-Web-API-and-Entity-Framework/"/>
    <id>http://tdekoekkoek.github.io/2016/12/08/Building-an-application-with-Angular2-Webpack-Dotnet-Core-Web-API-and-Entity-Framework/</id>
    <published>2016-12-09T02:48:24.000Z</published>
    <updated>2016-12-09T22:29:38.433Z</updated>
    
    <content type="html"><![CDATA[<p>This is the first in a multi-part blog series where I will discuss building an application using Angular2, Typescript, Webpack, .NET Core, Web API and Entity Framework.</p>
<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>I tend to skip through long blog posts, espcially those littered with screenshots of Visual Studio dialogs or similar.  I like to get to the point when reading blogs and aim to do the same when writing them.  That said, the series wouldn’t be complete without a brief introduction to each of these technologies.</p>
<h2 id="Technologies-We’re-Using"><a href="#Technologies-We’re-Using" class="headerlink" title="Technologies We’re Using:"></a>Technologies We’re Using:</h2><ul>
<li>Angular2<br>Angular has been an extremely popular framework for building the client side of web applications, typically of the single page variety (SPAs) as well as being the core behind the popular mobile framework, Ionic.  Now in version 2, this popular framework has become even more powerful allowing you to build applications using modern javascript (ES5, ES6) and Typescript while utilizing modern application concepts like Web Components.  Ionic 2 has also followed suit.  For more information see <a href="http://angular.io" target="_blank" rel="external">http://angular.io</a></li>
</ul>
<h4 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h4><p>TypeScript has become an indespenable tool for probably the majority of Javascript developers.  While some prefer to work in straight javascript, the benefits of typed Javascript have become extremely compelling.  Unlike pre-comilers like CoffeeScript, TypeScript is a pure superset of JavaScript.  And while developed by Microsoft it has been fully empraced by Google, who, at least for Angular 2 has actually endorsed it in favor of their own pre-compiler known as Dart.  For more information see <a href="https://www.typescriptlang.org/" target="_blank" rel="external">https://www.typescriptlang.org/</a></p>
<h4 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h4><p>Early releases of Angular focused on System.js for module loading.  Since then, the Angular team has fully embraced Webpack which has become the tool of choice for build scripting, bundling and module loading.  Honestly Webpack is a big topic that I’m only beginning to grasp so I will give a brief introduction to this topic.  For more information see <a href="http://webpack.github.io/" target="_blank" rel="external">http://webpack.github.io/</a></p>
<h4 id="NET-Core"><a href="#NET-Core" class="headerlink" title=".NET Core"></a>.NET Core</h4><p>.NET is a huge subject and no-doubt if you’re reading this you are very familiar with it.  .NET Core is its newest incarnation and is the first version that can run cross-platform.  As long as we don’t need any features in standard .NET, I’d like to build the application in .NET Core even though I will most likely only be hosting the application on Windows.</p>
<h4 id="Web-API"><a href="#Web-API" class="headerlink" title="Web API"></a>Web API</h4><p>.NET Web API is the server-side technology that we’ll use to create your REST server.  There are many other choices that we could have used such as Node.js or Java, but for me .NET Web API is a powerful choice that lets us develop our backend quickly while utilizing a language that I know very well, C#.</p>
<h2 id="Entity-Framework"><a href="#Entity-Framework" class="headerlink" title="Entity Framework"></a>Entity Framework</h2><p>We’ll be building out our persistence using Entity Framework and SQL Server.  I’ll briefly cover Code first migrations and how to build a data access layer using Entity Framework and how to provide that our Web API layer.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the first in a multi-part blog series where I will discuss building an application using Angular2, Typescript, Webpack, .NET Core
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Connect.Tech 2016</title>
    <link href="http://tdekoekkoek.github.io/2016/10/22/Connect-Tech-2016/"/>
    <id>http://tdekoekkoek.github.io/2016/10/22/Connect-Tech-2016/</id>
    <published>2016-10-22T14:53:41.000Z</published>
    <updated>2016-12-09T02:19:28.699Z</updated>
    
    <content type="html"><![CDATA[<p>I’m attending this year’s Connect Tech conference in Marietta, GA. This is a conference focusing on web, mobile, javascript and related technologies.  This is typically the weekend I attend the <a href="http://hocr.org" target="_blank" rel="external">Head of the Charles regatta</a>.  Unfortunately for a variety of reasons, I’m not attending this year so figured I’d get in some geek learning.</p>
<h2 id="Hexo-3-0-and-new-theme"><a href="#Hexo-3-0-and-new-theme" class="headerlink" title="Hexo 3.0 and new theme"></a>Hexo 3.0 and new theme</h2><p>Before I mention the details of the conference, it behooves me to mention that I’ve just updated my site to the new version of <a href="http://hexo.io" target="_blank" rel="external">Hexo</a>.  It was past due to do so and I decided also to update my theme.  Pretty nifty I think.</p>
<h2 id="angularjs"><a href="#angularjs" class="headerlink" title="angularjs"></a>angularjs</h2><p>I’ve been developing in Angular for a while now, and I am trying to learn some of the best techniques for developing new Angular 2.0 application as well as learning about refactoring, profiling and migrating Angular 1 apps.  Despite 1 or 2 mediocre to poor sessions, there have been some good sessions on Angular 1 performance, in particular “Scaling large Angular 1 apps” by <a href="https://twitter.com/JoubranJad" target="_blank" rel="external">Jad Joubran</a>.</p>
<h2 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h2><p>Webpack is becoming the go-to tool for bundling, minifying and packaging your web applications.  It’s a powerful yet confusing tool.  John Mercer’s session “Webpack: A Simple Introduction to a Complex Tool” helped clear up some of the confusion.</p>
<h2 id="NativeScript"><a href="#NativeScript" class="headerlink" title="NativeScript"></a>NativeScript</h2><p>NativeScript is an interesting tool for developing native Android, IOS and Windows Phone applications. <a href="https://twitter.com/jenlooper" target="_blank" rel="external">Jen Looper</a>‘s session on Angular 2 with NativeScript was a very creative, quick intro to NativeScript while writing an interesting app using the SoundCloud API.</p>
<h2 id="Progressive-Web-Apps-and-more…"><a href="#Progressive-Web-Apps-and-more…" class="headerlink" title="Progressive Web Apps and more…"></a>Progressive Web Apps and more…</h2><p>I’m about to sit in on a session about Angular 2 and Progressive Web Apps.  More on that and other topics next time…</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I’m attending this year’s Connect Tech conference in Marietta, GA. This is a conference focusing on web, mobile, javascript and related t
    
    </summary>
    
    
      <category term="angularjs" scheme="http://tdekoekkoek.github.io/tags/angularjs/"/>
    
      <category term="webpack" scheme="http://tdekoekkoek.github.io/tags/webpack/"/>
    
      <category term="javascript" scheme="http://tdekoekkoek.github.io/tags/javascript/"/>
    
      <category term="navtivescript" scheme="http://tdekoekkoek.github.io/tags/navtivescript/"/>
    
  </entry>
  
  <entry>
    <title>VisualCV</title>
    <link href="http://tdekoekkoek.github.io/2015/02/09/VisualCV/"/>
    <id>http://tdekoekkoek.github.io/2015/02/09/VisualCV/</id>
    <published>2015-02-10T04:44:09.000Z</published>
    <updated>2016-12-09T02:19:28.710Z</updated>
    
    <content type="html"><![CDATA[<p>I just got started with a new service called <a href="http://www.visualcv.com" target="_blank" rel="external">Visual CV</a>.  It seems like a pretty handy way to post a resume online.  They have various themes, though I’m using the free one.  You can import your resume from various sources, but I decided to import mine from <a href="http://linkedin.com" target="_blank" rel="external">LinkedIn</a>.  That way I can use LinkedIn as my master source and generate both an online and PDF version from it.</p>
<p>Once I imported my resume, it is available online at: (<a href="https://www.visualcv.com/tdekoekkoek" target="_blank" rel="external">https://www.visualcv.com/tdekoekkoek</a>) or on my blog at (<a href="http://tdekoekkoek.github.io/Resume/">http://tdekoekkoek.github.io/Resume/</a>)</p>
<p>Now if only I can just get my LinkedIn profile up to date!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I just got started with a new service called &lt;a href=&quot;http://www.visualcv.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visual CV&lt;/a&gt;.  It seems li
    
    </summary>
    
    
      <category term="resume" scheme="http://tdekoekkoek.github.io/tags/resume/"/>
    
      <category term="visualcv" scheme="http://tdekoekkoek.github.io/tags/visualcv/"/>
    
  </entry>
  
  <entry>
    <title>Getting started with hexo</title>
    <link href="http://tdekoekkoek.github.io/2015/02/04/Getting-started-with-hexo/"/>
    <id>http://tdekoekkoek.github.io/2015/02/04/Getting-started-with-hexo/</id>
    <published>2015-02-04T19:47:22.000Z</published>
    <updated>2016-12-09T02:19:28.705Z</updated>
    
    <content type="html"><![CDATA[<p>Yes I’m rebuilding my blog from scratch yet again.  My previous blog was done in Ghost and I didn’t keep it live.  I have now decided to relaunch my blog on github pages.</p>
<h2 id="Static-Site-Generators"><a href="#Static-Site-Generators" class="headerlink" title="Static Site Generators"></a>Static Site Generators</h2><p>I first tried out some static site generators like DocPad and Jekyl some time ago, but I ended up creating my blog in Ghost.  Since that time I’ve decided to revisit static sites for a number of reasons:</p>
<ul>
<li>My Ghost Blog needs to be replaced</li>
<li>I like the idea of hosting my blog on <a href="http://github.io" target="_blank" rel="external">github pages</a></li>
<li>I like having full control of my markup so that I can host <a href="https://angularjs.org/" target="_blank" rel="external">Angular</a> samples and applictions directly in my blog</li>
<li>It’s the latest thing all the cool kids are doing these days.</li>
</ul>
<h2 id="Introducing-Hexo"><a href="#Introducing-Hexo" class="headerlink" title="Introducing Hexo"></a>Introducing Hexo</h2><p><a href="http://hexo.io" target="_blank" rel="external">Hexo</a> is a powerful static blog generator.  I tried a number of other static site generators and either it was difficult to get blogging going without a lot of extra work or they required Ruby.  I was really looking for a Javascript only solution.  So I gave Hexo a try.  I’ve found it not only quite powerful, but well documented and extremely easy to set up.  There are also a number of <a href="http://hexo.io/themes" target="_blank" rel="external">themes</a> available.</p>
<p>So far I’m quite happy with my choice.  Hexo uses Markdown or Html for editing content and uses <a href="http://www.embeddedjs.com/" target="_blank" rel="external">EJS</a> and <a href="http://paularmstrong.github.io/swig/" target="_blank" rel="external">Swig</a> for templating.  However you really don’t need to know anything about EJS or Swig to use Hexo.</p>
<h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><p>Installing hexo is dead simple.  You just need to make sure you have Node and npm already set up.  If you’re not familiar with node, head on over to <a href="http://nodejs.org/" target="_blank" rel="external">http://nodejs.org/</a> to learn about it and to install it.  Borrowing from the Hello World documents, you can get started with Hexo as follows:</p>
<h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo</div></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/index.html" target="_blank" rel="external">Getting Started</a></p>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><p>Once you’re up and running with Hexo you’ll want to get a simple markdown editor.  Right now I’m just typing in <a href="http://brackets.io/" target="_blank" rel="external">Brackets</a> (a very cool editor by the way), but I’ll probably look into some online Markdown editors or perhaps a windows program or maybe just create a simple Angular app with <a href="https://github.com/showdownjs/showdown" target="_blank" rel="external">ShowDown</a>.  We’ll explore that another time.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Yes I’m rebuilding my blog from scratch yet again.  My previous blog was done in Ghost and I didn’t keep it live.  I have now decided to 
    
    </summary>
    
    
      <category term="hexo" scheme="http://tdekoekkoek.github.io/tags/hexo/"/>
    
      <category term="blogging" scheme="http://tdekoekkoek.github.io/tags/blogging/"/>
    
      <category term="angularjs" scheme="http://tdekoekkoek.github.io/tags/angularjs/"/>
    
  </entry>
  
</feed>
